// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Location$ReasonSuperTinyCompiler = require("./Location.bs.js");

function makeWith(stack, failures) {
  return /* record */[
          /* stack */stack,
          /* otherFailures */failures
        ];
}

function make(loc, string) {
  return /* record */[
          /* stack : array */[/* tuple */[
              loc,
              string
            ]],
          /* otherFailures : array */[]
        ];
}

function getStackTrace(error) {
  return $$Array.fold_left((function (acc, param) {
                var loc = param[0];
                var line = Location$ReasonSuperTinyCompiler.line(loc);
                var column = Location$ReasonSuperTinyCompiler.col(loc);
                var finalMessage = "" + (String(param[1]) + (" at line " + (String(line) + (", column " + (String(column) + "")))));
                return acc.concat(/* array */[finalMessage]);
              }), /* array */[], error[/* stack */0]);
}

function getAllStackTrace(error) {
  var otherFailureStackTraces = $$Array.fold_left($$Array.append, /* array */[], $$Array.map(getStackTrace, error[/* otherFailures */1]));
  return $$Array.append(getStackTrace(error), otherFailureStackTraces);
}

function toString(error) {
  return getAllStackTrace(error).join("\n");
}

exports.makeWith = makeWith;
exports.make = make;
exports.getStackTrace = getStackTrace;
exports.getAllStackTrace = getAllStackTrace;
exports.toString = toString;
/* No side effect */
