// Generated by BUCKLESCRIPT VERSION 5.0.0, PLEASE EDIT WITH CARE

import * as List from "../node_modules/bs-platform/lib/es6/list.js";
import * as Curry from "../node_modules/bs-platform/lib/es6/curry.js";
import * as $$String from "../node_modules/bs-platform/lib/es6/string.js";
import * as Caml_string from "../node_modules/bs-platform/lib/es6/caml_string.js";

function $less$less(f, g, x) {
  return Curry._1(f, Curry._1(g, x));
}

function explode(str) {
  var _i = str.length - 1 | 0;
  var _list = /* [] */0;
  while(true) {
    var list = _list;
    var i = _i;
    if (i < 0) {
      return list;
    } else {
      _list = /* :: */[
        Caml_string.get(str, i),
        list
      ];
      _i = i - 1 | 0;
      continue ;
    }
  };
}

function char_to_string(param) {
  return $$String.make(1, param);
}

function char_list_to_string(list) {
  return List.fold_left((function (prim, prim$1) {
                return prim + prim$1;
              }), "", List.map(char_to_string, list));
}

function take(n, list) {
  if (list) {
    var match = n === 0;
    if (match) {
      return /* [] */0;
    } else {
      return /* :: */[
              list[0],
              take(n - 1 | 0, list[1])
            ];
    }
  } else {
    return /* [] */0;
  }
}

export {
  $less$less ,
  explode ,
  char_to_string ,
  char_list_to_string ,
  take ,
  
}
/* No side effect */
